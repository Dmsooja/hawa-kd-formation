// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type AboutDocumentDataSlicesSlice = never;

/**
 * Content for About documents
 */
interface AboutDocumentData {
  /**
   * Slice Zone field in *About*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: about.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<AboutDocumentDataSlicesSlice> /**
   * Meta Title field in *About*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: about.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *About*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: about.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *About*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: about.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * About document from Prismic
 *
 * - **API ID**: `about`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type AboutDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<Simplify<AboutDocumentData>, "about", Lang>;

/**
 * Content for FAQ Item documents
 */
interface FaqItemDocumentData {
  /**
   * Question field in *FAQ Item*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: faq_item.question
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  question: prismic.RichTextField;

  /**
   * Answer field in *FAQ Item*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: faq_item.answer
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  answer: prismic.RichTextField;
}

/**
 * FAQ Item document from Prismic
 *
 * - **API ID**: `faq_item`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type FaqItemDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<FaqItemDocumentData>,
    "faq_item",
    Lang
  >;

type HomeDocumentDataSlicesSlice =
  | FeatureOverviewCtaSlice
  | LocationListSlice
  | LogoCarouselSlice
  | FeatureListWithIconSlice
  | HeroCtaSlice;

/**
 * Content for Home documents
 */
interface HomeDocumentData {
  /**
   * Slice Zone field in *Home*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: home.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<HomeDocumentDataSlicesSlice> /**
   * Meta Title field in *Home*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: home.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Home*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: home.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Home*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: home.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Home document from Prismic
 *
 * - **API ID**: `home`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomeDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<Simplify<HomeDocumentData>, "home", Lang>;

/**
 * Item in *Settings → Socials*
 */
export interface SettingsDocumentDataSocialsItem {
  /**
   * Icon field in *Settings → Socials*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.socials[].icon
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  icon: prismic.ImageField<never>;

  /**
   * Link field in *Settings → Socials*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.socials[].link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Content for Settings documents
 */
interface SettingsDocumentData {
  /**
   * Icon field in *Settings*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.icon
   * - **Tab**: Brand
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  icon: prismic.ImageField<never> /**
   * Website name field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.website_name
   * - **Tab**: SEO
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  website_name: prismic.KeyTextField;

  /**
   * Website short description field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.website_short_description
   * - **Tab**: SEO
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  website_short_description: prismic.KeyTextField /**
   * Menu field in *Settings*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.menu
   * - **Tab**: Header
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */;
  menu: prismic.Repeatable<
    prismic.LinkField<string, string, unknown, prismic.FieldState, never>
  >;

  /**
   * Call to action field in *Settings*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Highlighted top menu button
   * - **API ID Path**: settings.call_to_action
   * - **Tab**: Header
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  call_to_action: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  > /**
   * Copyright field in *Settings*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.copyright
   * - **Tab**: Footer
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */;
  copyright: prismic.RichTextField;

  /**
   * Socials field in *Settings*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.socials[]
   * - **Tab**: Footer
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  socials: prismic.GroupField<Simplify<SettingsDocumentDataSocialsItem>>;
}

/**
 * Settings document from Prismic
 *
 * - **API ID**: `settings`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SettingsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<SettingsDocumentData>,
    "settings",
    Lang
  >;

type TrainingDocumentDataSlicesSlice = never;

/**
 * Content for Training documents
 */
interface TrainingDocumentData {
  /**
   * Slice Zone field in *Training*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: training.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<TrainingDocumentDataSlicesSlice> /**
   * Meta Title field in *Training*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: training.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Training*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: training.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Training*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: training.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Training document from Prismic
 *
 * - **API ID**: `training`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type TrainingDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<TrainingDocumentData>,
    "training",
    Lang
  >;

export type AllDocumentTypes =
  | AboutDocument
  | FaqItemDocument
  | HomeDocument
  | SettingsDocument
  | TrainingDocument;

/**
 * Item in *TrainingList → Vertical Cards → Primary → Features*
 */
export interface FeatureListWithIconSliceDefaultPrimaryFeaturesItem {
  /**
   * Icon field in *TrainingList → Vertical Cards → Primary → Features*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_list_with_icon.default.primary.features[].icon
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  icon: prismic.ImageField<never>;

  /**
   * Feature Title field in *TrainingList → Vertical Cards → Primary → Features*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_list_with_icon.default.primary.features[].feature_title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  feature_title: prismic.RichTextField;

  /**
   * Feature Description field in *TrainingList → Vertical Cards → Primary → Features*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_list_with_icon.default.primary.features[].feature_description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  feature_description: prismic.RichTextField;
}

/**
 * Primary content in *TrainingList → Vertical Cards → Primary*
 */
export interface FeatureListWithIconSliceDefaultPrimary {
  /**
   * Background field in *TrainingList → Vertical Cards → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Background color
   * - **Default Value**: White
   * - **API ID Path**: feature_list_with_icon.default.primary.background
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background: prismic.SelectField<"White" | "Light Gray", "filled">;

  /**
   * Section Title field in *TrainingList → Vertical Cards → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_list_with_icon.default.primary.section_title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  section_title: prismic.TitleField;

  /**
   * Features field in *TrainingList → Vertical Cards → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_list_with_icon.default.primary.features[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  features: prismic.GroupField<
    Simplify<FeatureListWithIconSliceDefaultPrimaryFeaturesItem>
  >;

  /**
   * Button field in *TrainingList → Vertical Cards → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_list_with_icon.default.primary.button
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Vertical Cards variation for TrainingList Slice
 *
 * - **API ID**: `default`
 * - **Description**: Features or services list with icons, section heading and CTA button.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type FeatureListWithIconSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<FeatureListWithIconSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *TrainingList*
 */
type FeatureListWithIconSliceVariation = FeatureListWithIconSliceDefault;

/**
 * TrainingList Shared Slice
 *
 * - **API ID**: `feature_list_with_icon`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type FeatureListWithIconSlice = prismic.SharedSlice<
  "feature_list_with_icon",
  FeatureListWithIconSliceVariation
>;

/**
 * Item in *TrainingOverview → Horizontal Cards → Primary → Features*
 */
export interface FeatureOverviewCtaSliceDefaultPrimaryFeaturesItem {
  /**
   * Icon field in *TrainingOverview → Horizontal Cards → Primary → Features*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_overview_cta.default.primary.features[].icon
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  icon: prismic.ImageField<never>;

  /**
   * Feature Title field in *TrainingOverview → Horizontal Cards → Primary → Features*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_overview_cta.default.primary.features[].feature_title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  feature_title: prismic.KeyTextField;
}

/**
 * Primary content in *TrainingOverview → Horizontal Cards → Primary*
 */
export interface FeatureOverviewCtaSliceDefaultPrimary {
  /**
   * Background field in *TrainingOverview → Horizontal Cards → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Background color
   * - **Default Value**: White
   * - **API ID Path**: feature_overview_cta.default.primary.background
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background: prismic.SelectField<"White" | "Light Gray", "filled">;

  /**
   * Title field in *TrainingOverview → Horizontal Cards → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_overview_cta.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Subtitle field in *TrainingOverview → Horizontal Cards → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_overview_cta.default.primary.subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.TitleField;

  /**
   * Description field in *TrainingOverview → Horizontal Cards → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_overview_cta.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Features field in *TrainingOverview → Horizontal Cards → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_overview_cta.default.primary.features[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  features: prismic.GroupField<
    Simplify<FeatureOverviewCtaSliceDefaultPrimaryFeaturesItem>
  >;

  /**
   * Button field in *TrainingOverview → Horizontal Cards → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_overview_cta.default.primary.button
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Horizontal Cards variation for TrainingOverview Slice
 *
 * - **API ID**: `default`
 * - **Description**: Standard variation with title, subtitle, description, repeated feature group, and CTA button.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type FeatureOverviewCtaSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<FeatureOverviewCtaSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *TrainingOverview*
 */
type FeatureOverviewCtaSliceVariation = FeatureOverviewCtaSliceDefault;

/**
 * TrainingOverview Shared Slice
 *
 * - **API ID**: `feature_overview_cta`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type FeatureOverviewCtaSlice = prismic.SharedSlice<
  "feature_overview_cta",
  FeatureOverviewCtaSliceVariation
>;

/**
 * Primary content in *Hero → Cta → Primary*
 */
export interface HeroCtaSliceDefaultPrimary {
  /**
   * Background field in *Hero → Cta → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Background color
   * - **Default Value**: White
   * - **API ID Path**: hero_cta.default.primary.background
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background: prismic.SelectField<"White" | "Light Gray", "filled">;

  /**
   * Title field in *Hero → Cta → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_cta.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Description field in *Hero → Cta → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_cta.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Button field in *Hero → Cta → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_cta.default.primary.button
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Cta variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Standard hero section with headline, description, and a primary button.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroCtaSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroCtaSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Hero*
 */
type HeroCtaSliceVariation = HeroCtaSliceDefault;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero_cta`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroCtaSlice = prismic.SharedSlice<
  "hero_cta",
  HeroCtaSliceVariation
>;

/**
 * Item in *LocationList → Default → Primary → Locations*
 */
export interface LocationListSliceDefaultPrimaryLocationsItem {
  /**
   * Label field in *LocationList → Default → Primary → Locations*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: location_list.default.primary.locations[].label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  label: prismic.KeyTextField;
}

/**
 * Primary content in *LocationList → Default → Primary*
 */
export interface LocationListSliceDefaultPrimary {
  /**
   * Background field in *LocationList → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Background color
   * - **Default Value**: White
   * - **API ID Path**: location_list.default.primary.background
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background: prismic.SelectField<"White" | "Light Gray", "filled">;

  /**
   * Locations field in *LocationList → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: location_list.default.primary.locations[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  locations: prismic.GroupField<
    Simplify<LocationListSliceDefaultPrimaryLocationsItem>
  >;
}

/**
 * Default variation for LocationList Slice
 *
 * - **API ID**: `default`
 * - **Description**: Standard arrangement of location items in a row.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type LocationListSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<LocationListSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *LocationList*
 */
type LocationListSliceVariation = LocationListSliceDefault;

/**
 * LocationList Shared Slice
 *
 * - **API ID**: `location_list`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type LocationListSlice = prismic.SharedSlice<
  "location_list",
  LocationListSliceVariation
>;

/**
 * Item in *LogoCarousel → Carrousel → Primary → Logos*
 */
export interface LogoCarouselSliceDefaultPrimaryLogosItem {
  /**
   * Logo Image field in *LogoCarousel → Carrousel → Primary → Logos*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: logo_carousel.default.primary.logos[].logo_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  logo_image: prismic.ImageField<never>;

  /**
   * Alternative Text field in *LogoCarousel → Carrousel → Primary → Logos*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: logo_carousel.default.primary.logos[].alt_text
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  alt_text: prismic.KeyTextField;
}

/**
 * Primary content in *LogoCarousel → Carrousel → Primary*
 */
export interface LogoCarouselSliceDefaultPrimary {
  /**
   * Background field in *LogoCarousel → Carrousel → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Background color
   * - **Default Value**: White
   * - **API ID Path**: logo_carousel.default.primary.background
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background: prismic.SelectField<"White" | "Light Gray", "filled">;

  /**
   * Title field in *LogoCarousel → Carrousel → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: logo_carousel.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Logos field in *LogoCarousel → Carrousel → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: logo_carousel.default.primary.logos[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  logos: prismic.GroupField<Simplify<LogoCarouselSliceDefaultPrimaryLogosItem>>;
}

/**
 * Carrousel variation for LogoCarousel Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default variation for a logo carousel with heading and repeatable logo items.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type LogoCarouselSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<LogoCarouselSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *LogoCarousel*
 */
type LogoCarouselSliceVariation = LogoCarouselSliceDefault;

/**
 * LogoCarousel Shared Slice
 *
 * - **API ID**: `logo_carousel`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type LogoCarouselSlice = prismic.SharedSlice<
  "logo_carousel",
  LogoCarouselSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      AboutDocument,
      AboutDocumentData,
      AboutDocumentDataSlicesSlice,
      FaqItemDocument,
      FaqItemDocumentData,
      HomeDocument,
      HomeDocumentData,
      HomeDocumentDataSlicesSlice,
      SettingsDocument,
      SettingsDocumentData,
      SettingsDocumentDataSocialsItem,
      TrainingDocument,
      TrainingDocumentData,
      TrainingDocumentDataSlicesSlice,
      AllDocumentTypes,
      FeatureListWithIconSlice,
      FeatureListWithIconSliceDefaultPrimaryFeaturesItem,
      FeatureListWithIconSliceDefaultPrimary,
      FeatureListWithIconSliceVariation,
      FeatureListWithIconSliceDefault,
      FeatureOverviewCtaSlice,
      FeatureOverviewCtaSliceDefaultPrimaryFeaturesItem,
      FeatureOverviewCtaSliceDefaultPrimary,
      FeatureOverviewCtaSliceVariation,
      FeatureOverviewCtaSliceDefault,
      HeroCtaSlice,
      HeroCtaSliceDefaultPrimary,
      HeroCtaSliceVariation,
      HeroCtaSliceDefault,
      LocationListSlice,
      LocationListSliceDefaultPrimaryLocationsItem,
      LocationListSliceDefaultPrimary,
      LocationListSliceVariation,
      LocationListSliceDefault,
      LogoCarouselSlice,
      LogoCarouselSliceDefaultPrimaryLogosItem,
      LogoCarouselSliceDefaultPrimary,
      LogoCarouselSliceVariation,
      LogoCarouselSliceDefault,
    };
  }
}
